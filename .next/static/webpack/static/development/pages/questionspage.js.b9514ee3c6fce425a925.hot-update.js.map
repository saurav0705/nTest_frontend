{"version":3,"file":"static/webpack/static\\development\\pages\\questionspage.js.b9514ee3c6fce425a925.hot-update.js","sources":["webpack:///./pages/questionspage.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from \"./Layout\";\r\nimport { urlOfImages } from \"./images\";\r\nimport fetch from 'isomorphic-fetch';\r\nimport  Router  from 'next/router';\r\nimport ls from 'local-storage';\r\n\r\nclass Query extends Component{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            questionList :[],\r\n            answers : [],\r\n            questionBox : false,\r\n            quesbox:'',\r\n            query:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange (event) {\r\n        this.setState({ quesbox: event.target.value })\r\n      }\r\n      async componentDidMount() {\r\n           await fetch('http://localhost:8000/questions/')\r\n            .then(response => response.json())\r\n            .then((res)=>{\r\n                this.setState( {questionList : [...res.questionList]});\r\n            })\r\n            \r\n      }\r\n\r\n      questionDetails(obj)\r\n      {\r\n          localStorage.setItem('obj_id',obj);\r\n          Router.push('/questionWithAnswers');\r\n      }\r\n\r\n      renderQuestion(){\r\n          if(!this.state.questionList || this.state.questionList.length===0 )\r\n            {\r\n                return (<><div className=\"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\">\r\n                NOTHING FOUND\r\n                \r\n            </div></>)\r\n            }\r\n\r\n          return (<>\r\n              { this.state.questionList.map((question)=>{\r\n                   return <div className=\"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\" onClick={() => this.questionDetails(question._id)}>\r\n                  <b>Q.</b>   {question.question}\r\n                  \r\n              </div>\r\n              })}\r\n          </>\r\n          );\r\n\r\n      };\r\n\r\n\r\n      openQuestionDialog(){\r\n          this.setState({\r\n              questionBox : !this.state.questionBox\r\n          })\r\n      };\r\n\r\n      async submitquestion(){\r\n          console.log('called');\r\n          console.log(this.state.quesbox);\r\n          const url = 'http://localhost:8000/questions'\r\n          try {\r\n            const response = await fetch(url, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' ,\r\n              \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n              body: JSON.stringify({ question:this.state.quesbox})\r\n            }\r\n            )\r\n            if (response.ok) {\r\n              const data = await response.json()\r\n              console.log(\"data----------- \",data);\r\n            console.log(response);\r\n            this.openQuestionDialog();\r\n            this.componentDidMount();\r\n            //   await this.setState({\r\n            //       user:data.user\r\n            //   })\r\n            } else {\r\n              alert('unable to fetch')\r\n              \r\n            }\r\n          } catch (error) {\r\n            console.error(\r\n              'You have an error in your code or there are Network issues.',\r\n              error\r\n            )\r\n            throw new Error(error)\r\n          }\r\n      }\r\n      \r\n      async test(){\r\n          if(ls.get('query') && ls.get('query').length>0){\r\n        console.log('tetsing sucess ----------------- ',ls.get('query'));\r\n            await fetch('http://localhost:8000/questions/search/'+ls.get('query'))\r\n             .then(response => response.json())\r\n             .then((res)=>{\r\n                 console.log(res);\r\n                this.setState( {questionList : [...res.questionList]});\r\n                localStorage.setItem('query','');\r\n             })}\r\n             else{\r\n                 return;\r\n             }\r\n             \r\n       \r\n      }\r\n\r\n    render(){\r\n        this.test();\r\n    return(\r\n        <Layout>\r\n           <div className={this.state.questionBox ? 'hidden':'block'}>\r\n            <div className=\"flex overflow-hidden\">\r\n                <div className=\"fixed bottom-3 right-3 md:block  p-0 md:p-8\">\r\n                    <div className=\" w-full bg-red-300 hover:bg-red-700 text-white font-bold  mt-10 p-2  rounded \">\r\n                        <img src={urlOfImages.question} className=\"h-8 rounded-full inline-block\" onClick={()=>{this.openQuestionDialog()}}/><sapn className=\"hidden md:block \" > Ask A Question</sapn>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n            <div className=\"block text-center  border-gray-600 w-screen \">\r\n                \r\n                {this.renderQuestion()}\r\n              </div>\r\n              </div>  \r\n              </div>\r\n            <div className={this.state.questionBox ? 'block':'hidden'}>\r\n                <center>\r\n              <div className=\"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\">\r\n \r\n  <div className='px-4 py-6'>\r\n    <div className=\"font-bold text-xl mb-2\">Write Your Question Here</div>\r\n    \r\n    <textarea value={this.state.quesbox} onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" required placeholder=\"Enter Your question Here ...\" rows=\"6\"/>\r\n    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\" onClick={()=>this.submitquestion()}>\r\n  Submit Question\r\n</button>\r\n  </div>\r\n  \r\n</div>\r\n</center></div>\r\n        </Layout>\r\n        \r\n    )\r\n};\r\n}\r\n\r\nexport default Query;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AAUA;AACA;;;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;AAGA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;;;AAGA;AACA;AACA;AADA;AAGA;;;;;;;;;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAJA;AACA;;AADA;AACA;AAMA;;;;;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AACA;;;;;;;;AAGA;AAIA;AACA;;;;;;;;;;;;;;;;;AAIA;;;;;AACA;;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AApJA;AACA;AAsJA;;;;A","sourceRoot":""}