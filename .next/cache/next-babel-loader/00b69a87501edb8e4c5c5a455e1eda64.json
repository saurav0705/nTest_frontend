{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"./Layout\";\nimport { urlOfImages } from \"../public/icons/assets/images\";\nimport fetch from 'isomorphic-fetch';\nimport ls from 'local-storage';\nimport Router from 'next/router';\n\nvar QueryWithAns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QueryWithAns, _Component);\n\n  function QueryWithAns() {\n    var _this;\n\n    _classCallCheck(this, QueryWithAns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QueryWithAns).call(this));\n    _this.state = {\n      question: {},\n      answers: [],\n      loggedIn: false,\n      objId: '',\n      form: false,\n      quesbox: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QueryWithAns, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        quesbox: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!ls.get('loggedIn')) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.setState({\n                'loggedIn': true\n              }));\n\n            case 3:\n              this.show();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"upvote\",\n    value: function upvote(id) {\n      var url, response, data;\n      return _regeneratorRuntime.async(function upvote$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = 'https://questionstack-266907.appspot.com//answers/' + id + '/upvote';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                }\n              }));\n\n            case 4:\n              response = _context2.sent;\n\n              if (!response.ok) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              data = _context2.sent;\n              //console.log(.*)$\n              //console.log(.*)$\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context2.next = 13;\n              break;\n\n            case 12:\n              alert('unable to fetch');\n\n            case 13:\n              _context2.next = 19;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('You have an error in your code or there are Network issues.', _context2.t0);\n              throw new Error(_context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 15]]);\n    }\n  }, {\n    key: \"downvote\",\n    value: function downvote(id) {\n      var url, response, data;\n      return _regeneratorRuntime.async(function downvote$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = 'https://questionstack-266907.appspot.com//answers/' + id + '/downvote';\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                }\n              }));\n\n            case 4:\n              response = _context3.sent;\n\n              if (!response.ok) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              data = _context3.sent;\n              //console.log(.*)$\n              //console.log(.*)$\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context3.next = 13;\n              break;\n\n            case 12:\n              alert('unable to fetch');\n\n            case 13:\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('You have an error in your code or there are Network issues.', _context3.t0);\n              throw new Error(_context3.t0);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[1, 15]]);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function show$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://questionstack-266907.appspot.com//questions/' + ls.get('obj_id')).then(function (response) {\n                return response.json();\n              }).then(function (res) {\n                //console.log(.*)$\n                if (res.question) {\n                  _this2.setState({\n                    question: res.question\n                  });\n\n                  if (_this2.state.question.answers) {\n                    _this2.setState({\n                      answers: _this2.state.question.answers\n                    });\n                  }\n                }\n\n                _this2.setState({\n                  'objId': ls.get('obj_id')\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"submitanswer\",\n    value: function submitanswer() {\n      var url, response, data;\n      return _regeneratorRuntime.async(function submitanswer$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              //console.log(.*)$\n              url = 'https://questionstack-266907.appspot.com//questions/' + this.state.objId + '/answer';\n              _context5.prev = 1;\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                },\n                body: _JSON$stringify({\n                  answer: this.state.quesbox\n                })\n              }));\n\n            case 4:\n              response = _context5.sent;\n\n              if (!response.ok) {\n                _context5.next = 13;\n                break;\n              }\n\n              _context5.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              data = _context5.sent;\n              //console.log(.*)$\n              //console.log(.*)$\n              this.toggleBox();\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context5.next = 17;\n              break;\n\n            case 13:\n              alert('your Session expired');\n              localStorage.setItem('token', '');\n              localStorage.setItem('loggedIn', false);\n              Router.push('/');\n\n            case 17:\n              _context5.next = 23;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](1);\n              console.error('You have an error in your code or there are Network issues.', _context5.t0);\n              throw new Error(_context5.t0);\n\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, [[1, 19]]);\n    }\n  }, {\n    key: \"renderAnswer\",\n    value: function renderAnswer() {\n      var _this3 = this;\n\n      if (this.state.answers && this.state.answers.length > 0) {\n        return __jsx(\"div\", null, this.state.answers.map(function (answer) {\n          return __jsx(\"div\", {\n            key: answer._id,\n            className: \"flex justify-center bg-green-300 p-4 m-4\"\n          }, __jsx(\"div\", {\n            className: \"block md:flex justify-center w-full\"\n          }, __jsx(\"div\", null, __jsx(\"center\", null, __jsx(\"img\", {\n            src: urlOfImages.answer,\n            className: \"h-6 mt-5\"\n          }))), __jsx(\"div\", {\n            className: \"p-1 w-auto text-4m md:text-2xl\"\n          }, __jsx(\"span\", {\n            className: \"ml-2\"\n          }, answer.answer), __jsx(\"div\", {\n            className: \"text-right text-gray-500\"\n          }, \"-- \", answer.author.name)), __jsx(\"div\", {\n            className: _this3.state.loggedIn ? 'block p-6' : 'hidden p-6'\n          }, __jsx(\"button\", {\n            onClick: function onClick() {\n              return _this3.upvote(answer._id);\n            },\n            className: \"bg-green-500 hover:bg-green-700 w-full text-white p-2 px-4 mt-1 rounded mr-4\"\n          }, \"Upvote \", answer.upvote.length), __jsx(\"button\", {\n            onClick: function onClick() {\n              return _this3.downvote(answer._id);\n            },\n            className: \"bg-red-500 hover:bg-red-700 text-white w-full rounded px-4 p-2 mt-1 \"\n          }, \"Downvote \", answer.downvote.length))));\n        }));\n      } else {\n        return __jsx(\"div\", {\n          className: \"flex justify-center bg-green-300 p-4 m-4 text-2xl\"\n        }, \"NO ONE ANSWERED IT YET\");\n      }\n    }\n  }, {\n    key: \"toggleBox\",\n    value: function toggleBox() {\n      this.setState({\n        form: !this.state.form\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Layout, null, __jsx(\"div\", {\n        className: this.state.form ? 'hidden' : 'block'\n      }, __jsx(\"div\", {\n        className: \"flex overflow-hidden\"\n      }, __jsx(\"div\", {\n        className: this.state.loggedIn ? 'block' : 'hidden'\n      }, __jsx(\"div\", {\n        className: \"fixed top-10  left-3 md:relative md:w-1/6 p-6 -ml-6\"\n      }, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this4.toggleBox();\n        },\n        className: \"bg-blue-500 hover:bg-blue-700 w-full text-white font-bold p-1 px-4 -ml-3 md:py-2 md:px-4 rounded m-1 md:m-4\"\n      }, __jsx(\"span\", {\n        className: \"w-full\"\n      }, \" A\")))), __jsx(\"div\", {\n        className: \"block text-center  border-gray-600 w-screen w-full\"\n      }, __jsx(\"center\", null, __jsx(\"div\", {\n        key: this.state.question._id,\n        className: \"text-2l md:text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\"\n      }, __jsx(\"b\", null, \"Q.\"), \"   \", this.state.question.question), __jsx(\"div\", {\n        className: \"text-2xl bg-green-500 p-8 text-white\"\n      }, \"Answers\", this.renderAnswer()))))), __jsx(\"div\", {\n        className: this.state.form ? 'block' : 'hidden'\n      }, __jsx(\"center\", null, __jsx(\"div\", {\n        className: \"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\"\n      }, __jsx(\"div\", {\n        className: \"px-4 py-6\"\n      }, __jsx(\"div\", {\n        className: \"font-bold text-xl mb-2\"\n      }, \"Write Your Answer Here\"), __jsx(\"textarea\", {\n        value: this.state.quesbox,\n        onChange: this.handleChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        id: \"username\",\n        required: true,\n        placeholder: \"Enter Your question Here ...\",\n        rows: \"6\"\n      }), __jsx(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\",\n        onClick: function onClick() {\n          return _this4.submitanswer();\n        }\n      }, \"Submit Question\"))))));\n    }\n  }]);\n\n  return QueryWithAns;\n}(Component);\n\nexport default QueryWithAns;","map":null,"metadata":{},"sourceType":"module"}