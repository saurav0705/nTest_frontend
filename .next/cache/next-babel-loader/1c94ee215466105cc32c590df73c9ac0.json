{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"./Layout\";\nimport { urlOfImages } from '../public/icons/assets/images';\nimport { useEffect, Component } from \"react\";\nimport ls from 'local-storage';\nimport Router from \"next/router\";\nimport fetch from 'isomorphic-fetch';\n\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {}\n    };\n  }\n\n  async componentDidMount() {\n    if (!ls.get('loggedIn')) {\n      Router.push('/');\n    }\n\n    const url = 'https://questionstack-266907.appspot.com/users/info';\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": '*',\n          'Authorization': 'bearer ' + ls.get('token')\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json(); //console.log(.*)$\n        //   //console.log(.*)$\n\n        await this.setState({\n          user: data.user\n        });\n      } else {\n        alert('unable to fetch');\n      }\n    } catch (error) {\n      console.error('You have an error in your code or there are Network issues.', error);\n    }\n  }\n\n  renderQuestions() {\n    if (!this.state.user.questions) {\n      return __jsx(React.Fragment, null);\n    } else {\n      if (this.state.user.questions.length === 0) {\n        return __jsx(\"p\", {\n          className: \"text-4l m-1 bg-red-600 p-3 rounded\"\n        }, \"Well you are Very Intelligent\");\n      }\n\n      return __jsx(React.Fragment, null, this.state.user.questions.map(ques => {\n        return __jsx(\"p\", {\n          key: ques._id,\n          className: \"text-4l m-1 bg-red-600 p-3 rounded\"\n        }, \"Q. \", ques.question);\n      }));\n    }\n  }\n\n  renderAnswers() {\n    if (!this.state.user.answers) {\n      return __jsx(React.Fragment, null);\n    } else {\n      if (this.state.user.answers.length === 0) {\n        return __jsx(\"p\", {\n          className: \"text-4l m-1 bg-green-600 p-3 rounded\"\n        }, \"Lets Start Helping Others\");\n      }\n\n      return __jsx(React.Fragment, null, this.state.user.answers.map(ans => {\n        return __jsx(\"p\", {\n          key: ans._id,\n          className: \"text-4l m-1 bg-green-600 p-3 rounded\"\n        }, \"A. \", ans.answer);\n      }));\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", {\n      className: \"block md:flex justify-center p-4\"\n    }, __jsx(\"div\", {\n      className: \"p-4\"\n    }, __jsx(\"img\", {\n      src: urlOfImages.user,\n      className: \"h-auto rounded-full\",\n      alt: \"Profile Picture\"\n    }), __jsx(\"div\", {\n      className: \"flex justify-center mt-5\"\n    }, __jsx(\"div\", null, __jsx(\"img\", {\n      src: urlOfImages.copyright,\n      className: \"mx-2 mt-1 h-8\"\n    })), __jsx(\"div\", null, \" \", __jsx(\"img\", {\n      src: urlOfImages['stack-overflow'],\n      className: \"h-8\"\n    })), __jsx(\"div\", null, __jsx(\"p\", {\n      className: \"font-bold text-4l mb-2 mt-2\"\n    }, \"QuestionOverflow \")))), __jsx(\"div\", {\n      className: \"p-4\"\n    }, __jsx(\"div\", {\n      className: \"max-w-sm rounded border overflow-hidden shadow-lg\"\n    }, __jsx(\"div\", {\n      className: \"px-6 py-4\"\n    }, __jsx(\"div\", {\n      className: \"font-bold text-4xl mb-2\"\n    }, this.state.user.name), __jsx(\"div\", {\n      className: \" text-2xl mb-2\"\n    }, this.state.user.username), __jsx(\"p\", {\n      className: \"text-gray-700 text-base mt-5\"\n    }, \"Below Is the list of all the Question you asked and Answered. We very much Appreciate your contribution.\"), __jsx(\"div\", {\n      className: \"p-2 m-2 bg-red-400 text-white\"\n    }, __jsx(\"div\", {\n      className: \"font-bold text-xl mb-2\"\n    }, \"Questions Asked\"), this.renderQuestions()), __jsx(\"div\", {\n      className: \"p-2 m-2 bg-green-400 text-white\"\n    }, __jsx(\"div\", {\n      className: \"font-bold text-xl mb-2\"\n    }, \"Questions Answered\"), this.renderAnswers()), __jsx(\"p\", null))), __jsx(\"div\", {\n      className: \"flex justify-center m-4\"\n    }, __jsx(\"button\", {\n      className: \"bg-blue-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\n    }, \"Edit\"))))));\n  }\n\n}\n\nexport default Personal;","map":null,"metadata":{},"sourceType":"module"}