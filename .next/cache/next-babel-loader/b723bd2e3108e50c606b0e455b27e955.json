{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ntest\\\\next_tailwind\\\\pages\\\\questionspage.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"./Layout\";\nimport { urlOfImages } from \"./images\";\nimport fetch from 'isomorphic-fetch';\n\nvar Query =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Query, _Component);\n\n  function Query() {\n    var _this;\n\n    _classCallCheck(this, Query);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Query).call(this));\n    _this.state = {\n      questionList: [],\n      answers: []\n    };\n    return _this;\n  }\n\n  _createClass(Query, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8000/questions/').then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        _this2.setState({\n          questionList: _toConsumableArray(res.questionList)\n        });\n      });\n    }\n  }, {\n    key: \"renderQuestion\",\n    value: function renderQuestion() {\n      return __jsx(React.Fragment, null, this.state.questionList.map(function (question) {\n        return __jsx(\"div\", {\n          className: \"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\",\n          onClick: function onClick() {\n            return console.log(question._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, __jsx(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Q.\"), \"   \", question.question);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"flex overflow-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"fixed bottom-3 right-3 md:block   p-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \" w-full bg-red-300 hover:bg-red-700 text-white font-bold pl-0  pr-4  rounded-full \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: urlOfImages.question,\n        className: \"h-8 rounded-full inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), __jsx(\"sapn\", {\n        className: \"hidden md:block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Ask A Question\"))), __jsx(\"div\", {\n        className: \"block text-center  border-gray-600 w-screen \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.renderQuestion())));\n    }\n  }]);\n\n  return Query;\n}(Component);\n\nexport default Query;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ntest/next_tailwind/pages/questionspage.js"],"names":["React","Component","Layout","urlOfImages","fetch","Query","state","questionList","answers","then","response","json","res","setState","map","question","console","log","_id","renderQuestion"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;IAEMC,K;;;;;AACF,mBACA;AAAA;;AAAA;;AACI;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,OAAO,EAAG;AAFD,KAAb;AAFJ;AAOC;;;;wCACqB;AAAA;;AACdJ,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACCK,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAACG,GAAD,EAAO;AACT,QAAA,MAAI,CAACC,QAAL,CAAe;AAACN,UAAAA,YAAY,qBAAOK,GAAG,CAACL,YAAX;AAAb,SAAf;AACH,OAJD;AAML;;;qCACe;AAEZ,aAAQ,4BACF,KAAKD,KAAL,CAAWC,YAAX,CAAwBO,GAAxB,CAA4B,UAACC,QAAD,EAAY;AACrC,eAAO;AAAK,UAAA,SAAS,EAAC,uEAAf;AAAuF,UAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAArB,CAAN;AAAA,WAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,SACKH,QAAQ,CAACA,QADd,CAAP;AAIJ,OALC,CADE,CAAR;AAUH;;;6BACK;AACR,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEZ,WAAW,CAACY,QAAtB;AAAgC,QAAA,SAAS,EAAC,+BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAC+E;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD/E,CADJ,CADJ,EAQA;AAAK,QAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKI,cAAL,EAFL,CARA,CAFJ,CADJ;AAoBH;;;;EApDmBlB,S;;AAuDpB,eAAeI,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from \"./Layout\";\r\nimport { urlOfImages } from \"./images\";\r\nimport fetch from 'isomorphic-fetch';\r\n\r\nclass Query extends Component{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            questionList :[],\r\n            answers : []\r\n        }\r\n        \r\n    }\r\n      componentDidMount() {\r\n            fetch('http://localhost:8000/questions/')\r\n            .then(response => response.json())\r\n            .then((res)=>{\r\n                this.setState( {questionList : [...res.questionList]});\r\n            })\r\n            \r\n      }\r\n      renderQuestion(){\r\n\r\n          return (<>\r\n              { this.state.questionList.map((question)=>{\r\n                   return <div className=\"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\" onClick={() => console.log(question._id)}>\r\n                  <b>Q.</b>   {question.question}\r\n                  \r\n              </div>\r\n              })}\r\n          </>\r\n          );\r\n\r\n      };\r\n    render(){\r\n    return(\r\n        <Layout>\r\n           \r\n            <div className=\"flex overflow-hidden\">\r\n                <div className=\"fixed bottom-3 right-3 md:block   p-8\">\r\n                    <div className=\" w-full bg-red-300 hover:bg-red-700 text-white font-bold pl-0  pr-4  rounded-full \">\r\n                        <img src={urlOfImages.question} className=\"h-8 rounded-full inline-block\"/><sapn className=\"hidden md:block\"> Ask A Question</sapn>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            <div className=\"block text-center  border-gray-600 w-screen \">\r\n                \r\n                {this.renderQuestion()}\r\n              </div>\r\n              </div>  \r\n                \r\n        </Layout>\r\n        \r\n    )\r\n};\r\n}\r\n\r\nexport default Query;"]},"metadata":{},"sourceType":"module"}