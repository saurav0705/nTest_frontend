{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ntest\\\\next_tailwind\\\\pages\\\\questionspage.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"./Layout\";\nimport { urlOfImages } from \"./images\";\nimport fetch from 'isomorphic-fetch';\nimport { Router } from 'next/router';\nimport ls from 'local-storage';\n\nvar Query =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Query, _Component);\n\n  function Query() {\n    var _this;\n\n    _classCallCheck(this, Query);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Query).call(this));\n    _this.state = {\n      questionList: [],\n      answers: [],\n      questionBox: false,\n      quesbox: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Query, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        quesbox: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8000/questions/').then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        _this2.setState({\n          questionList: _toConsumableArray(res.questionList)\n        });\n      });\n    }\n  }, {\n    key: \"renderQuestion\",\n    value: function renderQuestion() {\n      return __jsx(React.Fragment, null, this.state.questionList.map(function (question) {\n        return __jsx(\"div\", {\n          className: \"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\",\n          onClick: function onClick() {\n            return console.log(question._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, __jsx(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Q.\"), \"   \", question.question);\n      }));\n    }\n  }, {\n    key: \"openQuestionDialog\",\n    value: function openQuestionDialog() {\n      this.setState({\n        questionBox: !this.state.questionBox\n      });\n    }\n  }, {\n    key: \"submitquestion\",\n    value: function submitquestion() {\n      var url, response, data;\n      return _regeneratorRuntime.async(function submitquestion$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('called');\n              console.log(this.state.quesbox);\n              url = 'http://localhost:8000/questions';\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                },\n                body: _JSON$stringify({\n                  question: this.state.quesbox\n                })\n              }));\n\n            case 6:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 10:\n              data = _context.sent;\n              console.log(\"data----------- \", data);\n              console.log(response);\n              this.openQuestionDialog();\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context.next = 18;\n              break;\n\n            case 17:\n              alert('unable to fetch');\n\n            case 18:\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('You have an error in your code or there are Network issues.', _context.t0);\n              throw new Error(_context.t0);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[3, 20]]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: this.state.questionBox ? 'hidden' : 'block',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"flex overflow-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"fixed bottom-3 right-3 md:block  p-0 md:p-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \" w-full bg-red-300 hover:bg-red-700 text-white font-bold   p-2  rounded \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: urlOfImages.question,\n        className: \"h-8 rounded-full inline-block\",\n        onClick: function onClick() {\n          _this3.openQuestionDialog();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), __jsx(\"sapn\", {\n        className: \"hidden md:block \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" Ask A Question\"))), __jsx(\"div\", {\n        className: \"block text-center  border-gray-600 w-screen \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.renderQuestion()))), __jsx(\"div\", {\n        className: this.state.questionBox ? 'block' : 'hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"px-4 py-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"font-bold text-xl mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Write Your Question Here\"), __jsx(\"textarea\", {\n        value: this.state.quesbox,\n        onChange: this.handleChange,\n        \"class\": \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        id: \"username\",\n        required: true,\n        placeholder: \"Enter Your question Here ...\",\n        rows: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        \"class\": \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\",\n        onClick: function onClick() {\n          return _this3.submitquestion();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Submit Question\"))))));\n    }\n  }]);\n\n  return Query;\n}(Component);\n\nexport default Query;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ntest/next_tailwind/pages/questionspage.js"],"names":["React","Component","Layout","urlOfImages","fetch","Router","ls","Query","state","questionList","answers","questionBox","quesbox","handleChange","bind","event","setState","target","value","then","response","json","res","map","question","console","log","_id","url","method","headers","get","body","ok","data","openQuestionDialog","componentDidMount","alert","error","Error","renderQuestion","submitquestion"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from \"./Layout\";\r\nimport { urlOfImages } from \"./images\";\r\nimport fetch from 'isomorphic-fetch';\r\nimport { Router } from 'next/router';\r\nimport ls from 'local-storage';\r\n\r\nclass Query extends Component{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            questionList :[],\r\n            answers : [],\r\n            questionBox : false,\r\n            quesbox:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange (event) {\r\n        this.setState({ quesbox: event.target.value })\r\n      }\r\n      componentDidMount() {\r\n            fetch('http://localhost:8000/questions/')\r\n            .then(response => response.json())\r\n            .then((res)=>{\r\n                this.setState( {questionList : [...res.questionList]});\r\n            })\r\n            \r\n      }\r\n      renderQuestion(){\r\n\r\n          return (<>\r\n              { this.state.questionList.map((question)=>{\r\n                   return <div className=\"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\" onClick={() => console.log(question._id)}>\r\n                  <b>Q.</b>   {question.question}\r\n                  \r\n              </div>\r\n              })}\r\n          </>\r\n          );\r\n\r\n      };\r\n\r\n\r\n      openQuestionDialog(){\r\n          this.setState({\r\n              questionBox : !this.state.questionBox\r\n          })\r\n      };\r\n\r\n      async submitquestion(){\r\n          console.log('called');\r\n          console.log(this.state.quesbox);\r\n          const url = 'http://localhost:8000/questions'\r\n          try {\r\n            const response = await fetch(url, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' ,\r\n              \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n              body: JSON.stringify({ question:this.state.quesbox})\r\n            }\r\n            )\r\n            if (response.ok) {\r\n              const data = await response.json()\r\n              console.log(\"data----------- \",data);\r\n            console.log(response);\r\n            this.openQuestionDialog();\r\n            this.componentDidMount();\r\n            //   await this.setState({\r\n            //       user:data.user\r\n            //   })\r\n            } else {\r\n              alert('unable to fetch')\r\n              \r\n            }\r\n          } catch (error) {\r\n            console.error(\r\n              'You have an error in your code or there are Network issues.',\r\n              error\r\n            )\r\n            throw new Error(error)\r\n          }\r\n      }\r\n      \r\n    render(){\r\n    return(\r\n        <Layout>\r\n           <div className={this.state.questionBox ? 'hidden':'block'}>\r\n            <div className=\"flex overflow-hidden\">\r\n                <div className=\"fixed bottom-3 right-3 md:block  p-0 md:p-8\">\r\n                    <div className=\" w-full bg-red-300 hover:bg-red-700 text-white font-bold   p-2  rounded \">\r\n                        <img src={urlOfImages.question} className=\"h-8 rounded-full inline-block\" onClick={()=>{this.openQuestionDialog()}}/><sapn className=\"hidden md:block \" > Ask A Question</sapn>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n            <div className=\"block text-center  border-gray-600 w-screen \">\r\n                \r\n                {this.renderQuestion()}\r\n              </div>\r\n              </div>  \r\n              </div>\r\n            <div className={this.state.questionBox ? 'block':'hidden'}>\r\n                <center>\r\n              <div className=\"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\">\r\n \r\n  <div className='px-4 py-6'>\r\n    <div className=\"font-bold text-xl mb-2\">Write Your Question Here</div>\r\n    \r\n    <textarea value={this.state.quesbox} onChange={this.handleChange} class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" required placeholder=\"Enter Your question Here ...\" rows=\"6\"/>\r\n    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\" onClick={()=>this.submitquestion()}>\r\n  Submit Question\r\n</button>\r\n  </div>\r\n  \r\n</div>\r\n</center></div>\r\n        </Layout>\r\n        \r\n    )\r\n};\r\n}\r\n\r\nexport default Query;"]},"metadata":{},"sourceType":"module"}