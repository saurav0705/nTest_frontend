{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"./Layout\";\nimport { urlOfImages } from \"./images\";\nimport fetch from 'isomorphic-fetch';\nimport Router from 'next/router';\nimport ls from 'local-storage';\n\nvar Query =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Query, _Component);\n\n  function Query() {\n    var _this;\n\n    _classCallCheck(this, Query);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Query).call(this));\n    _this.state = {\n      questionList: [],\n      answers: [],\n      questionBox: false,\n      quesbox: '',\n      query: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Query, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        quesbox: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://questionstack-266907.appspot.com//questions/').then(function (response) {\n                return response.json();\n              }).then(function (res) {\n                _this2.setState({\n                  questionList: _toConsumableArray(res.questionList)\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"questionDetails\",\n    value: function questionDetails(obj) {\n      localStorage.setItem('obj_id', obj);\n      Router.push('/questionWithAnswers');\n    }\n  }, {\n    key: \"renderQuestion\",\n    value: function renderQuestion() {\n      var _this3 = this;\n\n      if (!this.state.questionList || this.state.questionList.length === 0) {\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          className: \"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\"\n        }, \"NOTHING FOUND\"));\n      }\n\n      return __jsx(React.Fragment, null, this.state.questionList.map(function (question) {\n        return __jsx(\"div\", {\n          key: question._id,\n          className: \"text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\",\n          onClick: function onClick() {\n            return _this3.questionDetails(question._id);\n          }\n        }, __jsx(\"b\", null, \"Q.\"), \"   \", question.question);\n      }));\n    }\n  }, {\n    key: \"logIn\",\n    value: function logIn() {\n      return ls.get('loggedIn');\n    }\n  }, {\n    key: \"openQuestionDialog\",\n    value: function openQuestionDialog() {\n      this.setState({\n        questionBox: !this.state.questionBox\n      });\n    }\n  }, {\n    key: \"submitquestion\",\n    value: function submitquestion() {\n      var url, response, data;\n      return _regeneratorRuntime.async(function submitquestion$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //console.log(.*)$\n              //console.log(.*)$\n              url = 'https://questionstack-266907.appspot.com//questions';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                },\n                body: _JSON$stringify({\n                  question: this.state.quesbox\n                })\n              }));\n\n            case 4:\n              response = _context2.sent;\n\n              if (!response.ok) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              data = _context2.sent;\n              //console.log(.*)$\n              //console.log(.*)$\n              this.openQuestionDialog();\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context2.next = 17;\n              break;\n\n            case 13:\n              alert('Log In to add question');\n              localStorage.setItem('token', '');\n              localStorage.setItem('loggedIn', false);\n              Router.push('/');\n\n            case 17:\n              _context2.next = 23;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('You have an error in your code or there are Network issues.', _context2.t0);\n              throw new Error(_context2.t0);\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 19]]);\n    }\n  }, {\n    key: \"test\",\n    value: function test() {\n      var _this4 = this;\n\n      return _regeneratorRuntime.async(function test$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(ls.get('query') && ls.get('query').length > 0)) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://questionstack-266907.appspot.com//questions/search/' + ls.get('query')).then(function (response) {\n                return response.json();\n              }).then(function (res) {\n                //console.log(.*)$\n                _this4.setState({\n                  questionList: _toConsumableArray(res.questionList)\n                });\n\n                localStorage.setItem('query', '');\n              }));\n\n            case 3:\n              _context3.next = 6;\n              break;\n\n            case 5:\n              return _context3.abrupt(\"return\");\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      this.test();\n      return __jsx(Layout, null, __jsx(\"div\", {\n        className: this.state.questionBox ? 'hidden' : 'block'\n      }, __jsx(\"div\", {\n        className: \"flex overflow-hidden\"\n      }, __jsx(\"div\", {\n        className: \"fixed bottom-3 right-3 md:block  p-4 md:p-8 -ml-2\"\n      }, __jsx(\"div\", {\n        className: \" w-full bg-yellow-300 hover:bg-yellow-500 text-white font-bold  mt-10 p-2  rounded \",\n        onClick: function onClick() {\n          _this5.openQuestionDialog();\n        }\n      }, __jsx(\"span\", {\n        className: \"text-2l md:text-2xl \"\n      }, \" Q\"))), __jsx(\"div\", {\n        className: \"block text-center  border-gray-600 w-screen \"\n      }, this.renderQuestion()))), __jsx(\"div\", {\n        className: this.state.questionBox ? 'block' : 'hidden'\n      }, __jsx(\"center\", null, __jsx(\"div\", {\n        className: \"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\"\n      }, __jsx(\"div\", {\n        className: \"px-4 py-6\"\n      }, __jsx(\"div\", {\n        className: \"font-bold text-xl mb-2\"\n      }, \"Write Your Question Here\"), __jsx(\"textarea\", {\n        value: this.state.quesbox,\n        onChange: this.handleChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        id: \"username\",\n        required: true,\n        placeholder: \"Enter Your question Here ...\",\n        rows: \"6\"\n      }), __jsx(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\",\n        onClick: function onClick() {\n          return _this5.submitquestion();\n        }\n      }, \"Submit Question\"))))));\n    }\n  }]);\n\n  return Query;\n}(Component);\n\nexport default Query;","map":null,"metadata":{},"sourceType":"module"}