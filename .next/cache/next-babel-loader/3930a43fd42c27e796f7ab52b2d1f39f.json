{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ntest\\\\next_tailwind\\\\pages\\\\signupAndLogin\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Social from '../signupAndLogin/social';\nimport Layout from '../Layout';\nimport { render } from 'react-dom';\nimport { Component } from 'react';\nimport fetch from 'isomorphic-fetch';\nimport Router from 'next/router';\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  async login() {\n    //console.log(.*)$\n    if (this.state.username === '' || this.state.password === '') {\n      this.setState({\n        error: \"Fields can't be Empty\"\n      });\n    } else {\n      const url = 'https://questionstack-266907.appspot.com//users/login/'; //console.log(.*)$\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": '*'\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        });\n\n        if (response.ok) {\n          const {\n            token\n          } = await response.json();\n          localStorage.setItem('loggedIn', 'true');\n          localStorage.setItem('token', token); //console.log(.*)$\n          //console.log(.*)$\n\n          Router.push('/questionspage');\n        } else {\n          this.setState({\n            error: \"Invalid Credentials\"\n          });\n        }\n      } catch (error) {\n        this.setState({\n          error: \"Server not Reachable\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Social, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"mt-5 border w-full max-w-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Email\"), __jsx(\"input\", {\n      value: this.state.username,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"username\",\n      type: \"text\",\n      placeholder: \"Email\",\n      name: \"username\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"mb-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      className: \"shadow appearance-none border  rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"text-red-500 p-2 m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.error)), __jsx(\"div\", {\n      className: \"flex items-center justify-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        this.login();\n      },\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Log In\"), __jsx(\"a\", {\n      className: \"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Forgot Password?\")))))))));\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ntest/next_tailwind/pages/signupAndLogin/login.js"],"names":["Social","Layout","render","Component","fetch","Router","LogIn","constructor","props","state","username","password","error","handleChange","bind","handlePasswordChange","event","setState","target","value","login","url","response","method","headers","body","JSON","stringify","ok","token","json","localStorage","setItem","push"],"mappings":"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","sourcesContent":["import Social from '../signupAndLogin/social';\r\nimport Layout from '../Layout';\r\nimport { render } from 'react-dom';\r\nimport { Component } from 'react';\r\nimport fetch from 'isomorphic-fetch';\r\nimport  Router  from 'next/router';\r\n\r\n\r\n\r\nclass LogIn extends Component\r\n{\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = { username: '', password: ''  ,error:''}\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n    \r\n  }\r\n  \r\n  \r\n\r\n  handleChange (event) {\r\n    this.setState({ username: event.target.value })\r\n  }\r\n  handlePasswordChange (event) {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n  \r\n\r\n  async login()\r\n  {\r\n    //console.log(.*)$\r\n    if(this.state.username === '' || this.state.password === '')\r\n    {this.setState({\r\n      error : \"Fields can't be Empty\"\r\n        })\r\n      }\r\n    else{\r\n      const url = 'https://questionstack-266907.appspot.com//users/login/'\r\n      //console.log(.*)$\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' ,\r\n          \"Access-Control-Allow-Origin\":'*'},\r\n          body: JSON.stringify({ username:this.state.username,password:this.state.password })\r\n        }\r\n        )\r\n        if (response.ok) {\r\n          const { token } = await response.json()\r\n          localStorage.setItem('loggedIn','true');\r\n          localStorage.setItem('token',token);\r\n          //console.log(.*)$\r\n          //console.log(.*)$\r\n          Router.push('/questionspage');\r\n        } else {\r\n          this.setState({\r\n            error : \"Invalid Credentials\"\r\n              })\r\n          \r\n        }\r\n      } catch (error) {\r\n        this.setState({\r\n          error : \"Server not Reachable\"\r\n            })\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n                return (<>\r\n                      <Layout>\r\n                        <div>\r\n                        <Social />\r\n                        <center>\r\n                        <div className=\"mt-5 border w-full max-w-xs\">\r\n                  <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n                    <form>\r\n                    <div className=\"mb-4\">\r\n                      <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                        Email\r\n                      </label>\r\n                      <input value={this.state.username} onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Email\" name=\"username\" required/>\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                      <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n                        Password\r\n                      </label>\r\n                      <input  value={this.state.password} onChange={this.handlePasswordChange} className=\"shadow appearance-none border  rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" type=\"password\" placeholder=\"Password\" required/>\r\n                      <span className=\"text-red-500 p-2 m-2\">{this.state.error}</span>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <button type=\"submit\" onClick={()=>{this.login()}} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\r\n                        Log In\r\n                        {/* {(this.state.loggedIn ? <></>:<div>failed</div>)} */}\r\n                      </button>\r\n                      <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"#\">\r\n                        Forgot Password?\r\n                      </a>\r\n                    </div>\r\n                    </form>\r\n                  </div>\r\n                  \r\n                </div>\r\n                </center>\r\n                </div>\r\n                </Layout>\r\n                </>\r\n                );\r\n            };\r\n}\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}