{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Social from '../signupAndLogin/social';\nimport Layout from '../Layout';\nimport { render } from 'react-dom';\nimport { Component } from 'react';\nimport fetch from 'isomorphic-fetch';\nimport Router from 'next/router';\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  async login() {\n    //console.log(.*)$\n    if (this.state.username === '' || this.state.password === '') {\n      this.setState({\n        error: \"Fields can't be Empty\"\n      });\n    } else {\n      const url = 'https://questionstack-266907.appspot.com//users/login/'; //console.log(.*)$\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": '*'\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        });\n\n        if (response.ok) {\n          const {\n            token\n          } = await response.json();\n          localStorage.setItem('loggedIn', 'true');\n          localStorage.setItem('token', token); //console.log(.*)$\n          //console.log(.*)$\n\n          Router.push('/questionspage');\n        } else {\n          this.setState({\n            error: \"Invalid Credentials\"\n          });\n        }\n      } catch (error) {\n        this.setState({\n          error: \"Server not Reachable\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", null, __jsx(Social, null), __jsx(\"center\", null, __jsx(\"div\", {\n      className: \"mt-5 border w-full max-w-xs\"\n    }, __jsx(\"div\", {\n      className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n    }, __jsx(\"form\", null, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"username\"\n    }, \"Email\"), __jsx(\"input\", {\n      value: this.state.username,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"username\",\n      type: \"text\",\n      placeholder: \"Email\",\n      name: \"username\",\n      required: true\n    })), __jsx(\"div\", {\n      className: \"mb-6\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"password\"\n    }, \"Password\"), __jsx(\"input\", {\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      className: \"shadow appearance-none border  rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      required: true\n    }), __jsx(\"span\", {\n      className: \"text-red-500 p-2 m-2\"\n    }, this.state.error)), __jsx(\"div\", {\n      className: \"flex items-center justify-between\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        this.login();\n      },\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n      type: \"button\"\n    }, \"Log In\"), __jsx(\"a\", {\n      className: \"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\",\n      href: \"#\"\n    }, \"Forgot Password?\")))))))));\n  }\n\n}\n\nexport default LogIn;","map":null,"metadata":{},"sourceType":"module"}