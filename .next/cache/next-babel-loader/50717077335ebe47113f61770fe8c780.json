{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ntest\\\\next_tailwind\\\\pages\\\\questionWithAnswers.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"./Layout\";\nimport { urlOfImages } from \"./images\";\nimport fetch from 'isomorphic-fetch';\nimport ls from 'local-storage';\n\nvar QueryWithAns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QueryWithAns, _Component);\n\n  function QueryWithAns() {\n    var _this;\n\n    _classCallCheck(this, QueryWithAns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QueryWithAns).call(this));\n    _this.state = {\n      question: {},\n      answers: [],\n      loggedIn: false,\n      objId: '',\n      form: false,\n      quesbox: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QueryWithAns, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        quesbox: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!ls.get('loggedIn')) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.setState({\n                'loggedIn': true\n              }));\n\n            case 3:\n              this.show();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"upvote\",\n    value: function upvote(id) {\n      var url, response, data;\n      return _regeneratorRuntime.async(function upvote$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = '/answers/' + id + '/upvote';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                }\n              }));\n\n            case 4:\n              response = _context2.sent;\n\n              if (!response.ok) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              data = _context2.sent;\n              console.log(\"data----------- \", data);\n              console.log(response);\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context2.next = 15;\n              break;\n\n            case 14:\n              alert('unable to fetch');\n\n            case 15:\n              _context2.next = 21;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('You have an error in your code or there are Network issues.', _context2.t0);\n              throw new Error(_context2.t0);\n\n            case 21:\n              console.log('up----------------------', id);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 17]]);\n    }\n  }, {\n    key: \"downvote\",\n    value: function downvote(id) {\n      var url, response, data;\n      return _regeneratorRuntime.async(function downvote$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = '/answers/' + id + '/downvote';\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                }\n              }));\n\n            case 4:\n              response = _context3.sent;\n\n              if (!response.ok) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              data = _context3.sent;\n              console.log(\"data----------- \", data);\n              console.log(response);\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context3.next = 15;\n              break;\n\n            case 14:\n              alert('unable to fetch');\n\n            case 15:\n              _context3.next = 21;\n              break;\n\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('You have an error in your code or there are Network issues.', _context3.t0);\n              throw new Error(_context3.t0);\n\n            case 21:\n              console.log('down-----------------------', id);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[1, 17]]);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function show$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(fetch('/questions/' + ls.get('obj_id')).then(function (response) {\n                return response.json();\n              }).then(function (res) {\n                console.log('test---------------- ', res);\n\n                if (res.question) {\n                  _this2.setState({\n                    question: res.question\n                  });\n\n                  if (_this2.state.question.answers) {\n                    _this2.setState({\n                      answers: _this2.state.question.answers\n                    });\n                  }\n                }\n\n                _this2.setState({\n                  'objId': ls.get('obj_id')\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"submitanswer\",\n    value: function submitanswer() {\n      var url, response, data;\n      return _regeneratorRuntime.async(function submitanswer$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log('called');\n              url = '/questions/' + this.state.objId + '/answer';\n              _context5.prev = 2;\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  \"Access-Control-Allow-Origin\": '*',\n                  'Authorization': 'bearer ' + ls.get('token')\n                },\n                body: _JSON$stringify({\n                  answer: this.state.quesbox\n                })\n              }));\n\n            case 5:\n              response = _context5.sent;\n\n              if (!response.ok) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              data = _context5.sent;\n              console.log(\"data----------- \", data);\n              console.log(response);\n              this.toggleBox();\n              this.componentDidMount(); //   await this.setState({\n              //       user:data.user\n              //   })\n\n              _context5.next = 17;\n              break;\n\n            case 16:\n              alert('unable to fetch');\n\n            case 17:\n              _context5.next = 23;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error('You have an error in your code or there are Network issues.', _context5.t0);\n              throw new Error(_context5.t0);\n\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, [[2, 19]]);\n    }\n  }, {\n    key: \"renderAnswer\",\n    value: function renderAnswer() {\n      var _this3 = this;\n\n      if (this.state.answers && this.state.answers.length > 0) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, this.state.answers.map(function (answer) {\n          return __jsx(\"div\", {\n            className: \"flex justify-center bg-green-300 p-4 m-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            className: \"block md:flex justify-center w-full\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, __jsx(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, __jsx(\"img\", {\n            src: urlOfImages.answer,\n            className: \"h-6 mt-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }))), __jsx(\"div\", {\n            className: \"p-1 w-auto text-4m md:text-2xl\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, __jsx(\"span\", {\n            className: \"ml-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, answer.answer), __jsx(\"div\", {\n            className: \"text-right text-gray-500\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, \"-- \", answer.author.name)), __jsx(\"div\", {\n            className: _this3.state.loggedIn ? 'block p-6' : 'hidden p-6',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, __jsx(\"button\", {\n            onClick: function onClick() {\n              return _this3.upvote(answer._id);\n            },\n            className: \"bg-green-500 hover:bg-green-700 w-full text-white p-2 px-4 mt-1 rounded mr-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"Upvote \", answer.upvote.length), __jsx(\"button\", {\n            onClick: function onClick() {\n              return _this3.downvote(answer._id);\n            },\n            className: \"bg-red-500 hover:bg-red-700 text-white w-full rounded px-4 p-2 mt-1 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"Downvote \", answer.downvote.length))));\n        }));\n      } else {\n        return __jsx(\"div\", {\n          className: \"flex justify-center bg-green-300 p-4 m-4 text-2xl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"NO ONE ANSWERED IT YET\");\n      }\n    }\n  }, {\n    key: \"toggleBox\",\n    value: function toggleBox() {\n      this.setState({\n        form: !this.state.form\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: this.state.form ? 'hidden' : 'block',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"flex overflow-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: this.state.loggedIn ? 'block' : 'hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"fixed top-10  left-3 md:relative md:w-1/6 p-6 -ml-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this4.toggleBox();\n        },\n        className: \"bg-blue-500 hover:bg-blue-700 w-full text-white font-bold p-1 px-4 -ml-3 md:py-2 md:px-4 rounded m-1 md:m-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \" A\")))), __jsx(\"div\", {\n        className: \"block text-center  border-gray-600 w-screen w-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-2l md:text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Q.\"), \"   \", this.state.question.question), __jsx(\"div\", {\n        className: \"text-2xl bg-green-500 p-8 text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Answers\", this.renderAnswer()))))), __jsx(\"div\", {\n        className: this.state.form ? 'block' : 'hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"px-4 py-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"font-bold text-xl mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Write Your Answer Here\"), __jsx(\"textarea\", {\n        value: this.state.quesbox,\n        onChange: this.handleChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        id: \"username\",\n        required: true,\n        placeholder: \"Enter Your question Here ...\",\n        rows: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\",\n        onClick: function onClick() {\n          return _this4.submitanswer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Submit Question\"))))));\n    }\n  }]);\n\n  return QueryWithAns;\n}(Component);\n\nexport default QueryWithAns;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ntest/next_tailwind/pages/questionWithAnswers.js"],"names":["React","Component","Layout","urlOfImages","fetch","ls","QueryWithAns","state","question","answers","loggedIn","objId","form","quesbox","handleChange","bind","event","setState","target","value","get","show","id","url","method","headers","response","ok","json","data","console","log","componentDidMount","alert","error","Error","then","res","body","answer","toggleBox","length","map","author","name","upvote","_id","downvote","renderAnswer","submitanswer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from \"./Layout\";\r\nimport { urlOfImages } from \"./images\";\r\nimport fetch from 'isomorphic-fetch';\r\nimport ls from 'local-storage';\r\nclass QueryWithAns extends Component{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            question :{},\r\n            answers : [],\r\n            loggedIn : false,\r\n            objId : '',\r\n            form:false,\r\n            quesbox:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange (event) {\r\n        this.setState({ quesbox: event.target.value })\r\n      }\r\n     async componentDidMount() {\r\n         if(ls.get('loggedIn')){\r\n            await this.setState({'loggedIn':true});\r\n        }         \r\n            this.show();\r\n      }\r\n      async upvote(id)\r\n      {\r\n        const url = '/answers/'+id+'/upvote'\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' ,\r\n            \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n          }\r\n          )\r\n          if (response.ok) {\r\n            const data = await response.json()\r\n            console.log(\"data----------- \",data);\r\n          console.log(response);\r\n          this.componentDidMount();\r\n          //   await this.setState({\r\n          //       user:data.user\r\n          //   })\r\n          } else {\r\n            alert('unable to fetch')\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            'You have an error in your code or there are Network issues.',\r\n            error\r\n          )\r\n          throw new Error(error)\r\n        }\r\n        console.log('up----------------------',id);\r\n      }\r\n\r\n      async downvote(id)\r\n      {\r\n        const url = '/answers/'+id+'/downvote'\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' ,\r\n            \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n          }\r\n          )\r\n          if (response.ok) {\r\n            const data = await response.json()\r\n            console.log(\"data----------- \",data);\r\n          console.log(response);\r\n          this.componentDidMount();\r\n          //   await this.setState({\r\n          //       user:data.user\r\n          //   })\r\n          } else {\r\n            alert('unable to fetch')\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            'You have an error in your code or there are Network issues.',\r\n            error\r\n          )\r\n          throw new Error(error)\r\n        }\r\n        \r\n        console.log('down-----------------------',id);\r\n      }\r\n      async show(){\r\n        await fetch('/questions/'+ls.get('obj_id'))\r\n        .then(response => response.json())\r\n        .then((res)=>{\r\n            console.log('test---------------- ',res);\r\n            if(res.question){\r\n            this.setState({question : res.question})\r\n                if(this.state.question.answers){\r\n                    this.setState({answers : this.state.question.answers})\r\n                }}\r\n            this.setState({'objId':ls.get('obj_id')});\r\n            \r\n        })\r\n      }\r\n\r\n      async submitanswer(){\r\n        console.log('called');\r\n       \r\n        const url = '/questions/'+this.state.objId+'/answer';\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' ,\r\n            \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n            body: JSON.stringify({ answer:this.state.quesbox})\r\n          }\r\n          )\r\n          if (response.ok) {\r\n            const data = await response.json()\r\n            console.log(\"data----------- \",data);\r\n          console.log(response);\r\n          this.toggleBox();\r\n          this.componentDidMount();\r\n          //   await this.setState({\r\n          //       user:data.user\r\n          //   })\r\n          } else {\r\n            alert('unable to fetch')\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            'You have an error in your code or there are Network issues.',\r\n            error\r\n          )\r\n          throw new Error(error)\r\n        }\r\n    }\r\n    \r\n\r\n      renderAnswer(){\r\n        if(this.state.answers && this.state.answers.length>0){\r\n        return ( <div>{this.state.answers.map((answer)=>{ return(\r\n            <div className=\"flex justify-center bg-green-300 p-4 m-4\">\r\n        <div className=\"block md:flex justify-center w-full\">\r\n        <div><center>\r\n            <img src={urlOfImages.answer} className=\"h-6 mt-5\"/></center>\r\n        </div>\r\n        \r\n        <div className='p-1 w-auto text-4m md:text-2xl'>\r\n            <span className=\"ml-2\">\r\n           {answer.answer}\r\n           </span>\r\n           <div className=\"text-right text-gray-500\">-- {answer.author.name}</div>\r\n        </div>\r\n        <div className={this.state.loggedIn ? 'block p-6':'hidden p-6'}>\r\n        <button onClick={()=>this.upvote(answer._id)} className=\"bg-green-500 hover:bg-green-700 w-full text-white p-2 px-4 mt-1 rounded mr-4\" >Upvote {answer.upvote.length}</button> \r\n        \r\n        <button onClick={()=>this.downvote(answer._id)} className=\"bg-red-500 hover:bg-red-700 text-white w-full rounded px-4 p-2 mt-1 \">Downvote {answer.downvote.length}</button> \r\n        </div>\r\n        </div>\r\n        </div>)\r\n        })}</div> );}\r\n        else{\r\n            return (<div className=\"flex justify-center bg-green-300 p-4 m-4 text-2xl\">NO ONE ANSWERED IT YET</div>)\r\n        }\r\n        \r\n      };\r\n\r\n\r\n      toggleBox(){\r\n        this.setState({\r\n            form : !this.state.form\r\n        })\r\n      }\r\n\r\n    render(){\r\n    return(\r\n        <Layout>\r\n           <div className={this.state.form ? 'hidden':'block'}>\r\n            <div className=\"flex overflow-hidden\">\r\n                <div  className={this.state.loggedIn ? 'block':'hidden'}>\r\n                <div className=\"fixed top-10  left-3 md:relative md:w-1/6 p-6 -ml-6\">\r\n                    <div onClick={()=> this.toggleBox()} className=\"bg-blue-500 hover:bg-blue-700 w-full text-white font-bold p-1 px-4 -ml-3 md:py-2 md:px-4 rounded m-1 md:m-4\">\r\n                        <span className=\"w-full\"> A</span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            <div className=\"block text-center  border-gray-600 w-screen w-full\">\r\n                <center>\r\n            <div className=\"text-2l md:text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\" >\r\n                  <b>Q.</b>   {this.state.question.question}\r\n                  \r\n              </div>\r\n               \r\n                \r\n                <div className=\"text-2xl bg-green-500 p-8 text-white\">\r\n                    Answers\r\n                    {this.renderAnswer()}\r\n\r\n                </div>\r\n\r\n                </center>\r\n            </div>\r\n            \r\n            </div>\r\n            </div>\r\n            <div className={this.state.form ? 'block':'hidden'}>\r\n                <center>\r\n              <div className=\"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\">\r\n \r\n  <div className='px-4 py-6'>\r\n    <div className=\"font-bold text-xl mb-2\">Write Your Answer Here</div>\r\n    \r\n    <textarea value={this.state.quesbox} onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" required placeholder=\"Enter Your question Here ...\" rows=\"6\"/>\r\n    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\" onClick={()=>this.submitanswer()}>\r\n  Submit Question\r\n</button>\r\n  </div>\r\n  \r\n</div>\r\n</center></div>\r\n        </Layout>\r\n        \r\n    )\r\n};\r\n}\r\n\r\nexport default QueryWithAns;"]},"metadata":{},"sourceType":"module"}