{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ntest\\\\next_tailwind\\\\pages\\\\questionWithAnswers.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from \"./Layout\";\nimport { urlOfImages } from \"./images\";\nimport fetch from 'isomorphic-fetch';\nimport ls from 'local-storage';\n\nclass QueryWithAns extends Component {\n  constructor() {\n    super();\n    this.state = {\n      question: {},\n      answers: [],\n      loggedIn: false,\n      objId: '',\n      form: false,\n      quesbox: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      quesbox: event.target.value\n    });\n  }\n\n  async componentDidMount() {\n    if (ls.get('loggedIn')) {\n      await this.setState({\n        'loggedIn': true\n      });\n    }\n\n    this.show();\n  }\n\n  async upvote(id) {\n    const url = 'http://localhost:8000/answers/' + id + '/upvote';\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": '*',\n          'Authorization': 'bearer ' + ls.get('token')\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"data----------- \", data);\n        console.log(response);\n        this.componentDidMount(); //   await this.setState({\n        //       user:data.user\n        //   })\n      } else {\n        alert('unable to fetch');\n      }\n    } catch (error) {\n      console.error('You have an error in your code or there are Network issues.', error);\n      throw new Error(error);\n    }\n\n    console.log('up----------------------', id);\n  }\n\n  async downvote(id) {\n    const url = 'http://localhost:8000/answers/' + id + '/downvote';\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": '*',\n          'Authorization': 'bearer ' + ls.get('token')\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"data----------- \", data);\n        console.log(response);\n        this.componentDidMount(); //   await this.setState({\n        //       user:data.user\n        //   })\n      } else {\n        alert('unable to fetch');\n      }\n    } catch (error) {\n      console.error('You have an error in your code or there are Network issues.', error);\n      throw new Error(error);\n    }\n\n    console.log('down-----------------------', id);\n  }\n\n  async show() {\n    await fetch('http://localhost:8000/questions/' + ls.get('obj_id')).then(response => response.json()).then(res => {\n      console.log('test---------------- ', res);\n\n      if (res.question) {\n        this.setState({\n          question: res.question\n        });\n\n        if (this.state.question.answers) {\n          this.setState({\n            answers: this.state.question.answers\n          });\n        }\n      }\n\n      this.setState({\n        'objId': ls.get('obj_id')\n      });\n    });\n  }\n\n  async submitanswer() {\n    console.log('called');\n    const url = 'http://localhost:8000/questions/' + this.state.objId + '/answer';\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": '*',\n          'Authorization': 'bearer ' + ls.get('token')\n        },\n        body: JSON.stringify({\n          answer: this.state.quesbox\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"data----------- \", data);\n        console.log(response);\n        this.toggleBox();\n        this.componentDidMount(); //   await this.setState({\n        //       user:data.user\n        //   })\n      } else {\n        alert('unable to fetch');\n      }\n    } catch (error) {\n      console.error('You have an error in your code or there are Network issues.', error);\n      throw new Error(error);\n    }\n  }\n\n  renderAnswer() {\n    if (this.state.answers && this.state.answers.length > 0) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.answers.map(answer => {\n        return __jsx(\"div\", {\n          className: \"flex justify-center bg-green-300 p-4 m-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"block md:flex justify-center w-full\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, __jsx(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: urlOfImages.answer,\n          className: \"h-6 mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }))), __jsx(\"div\", {\n          className: \"p-1 w-auto text-4m md:text-2xl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"ml-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, answer.answer), __jsx(\"div\", {\n          className: \"text-right text-gray-500\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"-- \", answer.author.name)), __jsx(\"div\", {\n          className: this.state.loggedIn ? 'block p-6' : 'hidden p-6',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          onClick: () => this.upvote(answer._id),\n          className: \"bg-green-500 hover:bg-green-700 w-full text-white p-2 px-4 mt-1 rounded mr-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Upvote \", answer.upvote.length), __jsx(\"button\", {\n          onClick: () => this.downvote(answer._id),\n          className: \"bg-red-500 hover:bg-red-700 text-white w-full rounded px-4 p-2 mt-1 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Downvote \", answer.downvote.length))));\n      }));\n    } else {\n      return __jsx(\"div\", {\n        className: \"flex justify-center bg-green-300 p-4 m-4 text-2xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"NO ONE ANSWERED IT YET\");\n    }\n  }\n\n  toggleBox() {\n    this.setState({\n      form: !this.state.form\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: this.state.form ? 'hidden' : 'block',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"flex overflow-hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: this.state.loggedIn ? 'block' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"fixed top-10  left-3 md:relative md:w-1/6 p-6 -ml-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onClick: () => this.toggleBox(),\n      className: \"bg-blue-500 hover:bg-blue-700 w-full text-white font-bold p-1 px-4 -ml-3 md:py-2 md:px-4 rounded m-1 md:m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"w-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" Answer\")))), __jsx(\"div\", {\n      className: \"block text-center  border-gray-600 w-screen md:w-5/6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"text-2l md:text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Q.\"), \"   \", this.state.question.question), __jsx(\"div\", {\n      className: \"text-2xl bg-green-500 p-8 text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Answers\", this.renderAnswer()))))), __jsx(\"div\", {\n      className: this.state.form ? 'block' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"px-4 py-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"font-bold text-xl mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Write Your Answer Here\"), __jsx(\"textarea\", {\n      value: this.state.quesbox,\n      onChange: this.handleChange,\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"username\",\n      required: true,\n      placeholder: \"Enter Your question Here ...\",\n      rows: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\",\n      onClick: () => this.submitanswer(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Submit Question\"))))));\n  }\n\n}\n\nexport default QueryWithAns;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ntest/next_tailwind/pages/questionWithAnswers.js"],"names":["React","Component","Layout","urlOfImages","fetch","ls","QueryWithAns","constructor","state","question","answers","loggedIn","objId","form","quesbox","handleChange","bind","event","setState","target","value","componentDidMount","get","show","upvote","id","url","response","method","headers","ok","data","json","console","log","alert","error","Error","downvote","then","res","submitanswer","body","JSON","stringify","answer","toggleBox","renderAnswer","length","map","author","name","_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from \"./Layout\";\r\nimport { urlOfImages } from \"./images\";\r\nimport fetch from 'isomorphic-fetch';\r\nimport ls from 'local-storage';\r\nclass QueryWithAns extends Component{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            question :{},\r\n            answers : [],\r\n            loggedIn : false,\r\n            objId : '',\r\n            form:false,\r\n            quesbox:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange (event) {\r\n        this.setState({ quesbox: event.target.value })\r\n      }\r\n     async componentDidMount() {\r\n         if(ls.get('loggedIn')){\r\n            await this.setState({'loggedIn':true});\r\n        }         \r\n            this.show();\r\n      }\r\n      async upvote(id)\r\n      {\r\n        const url = 'http://localhost:8000/answers/'+id+'/upvote'\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' ,\r\n            \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n          }\r\n          )\r\n          if (response.ok) {\r\n            const data = await response.json()\r\n            console.log(\"data----------- \",data);\r\n          console.log(response);\r\n          this.componentDidMount();\r\n          //   await this.setState({\r\n          //       user:data.user\r\n          //   })\r\n          } else {\r\n            alert('unable to fetch')\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            'You have an error in your code or there are Network issues.',\r\n            error\r\n          )\r\n          throw new Error(error)\r\n        }\r\n        console.log('up----------------------',id);\r\n      }\r\n\r\n      async downvote(id)\r\n      {\r\n        const url = 'http://localhost:8000/answers/'+id+'/downvote'\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' ,\r\n            \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n          }\r\n          )\r\n          if (response.ok) {\r\n            const data = await response.json()\r\n            console.log(\"data----------- \",data);\r\n          console.log(response);\r\n          this.componentDidMount();\r\n          //   await this.setState({\r\n          //       user:data.user\r\n          //   })\r\n          } else {\r\n            alert('unable to fetch')\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            'You have an error in your code or there are Network issues.',\r\n            error\r\n          )\r\n          throw new Error(error)\r\n        }\r\n        \r\n        console.log('down-----------------------',id);\r\n      }\r\n      async show(){\r\n        await fetch('http://localhost:8000/questions/'+ls.get('obj_id'))\r\n        .then(response => response.json())\r\n        .then((res)=>{\r\n            console.log('test---------------- ',res);\r\n            if(res.question){\r\n            this.setState({question : res.question})\r\n                if(this.state.question.answers){\r\n                    this.setState({answers : this.state.question.answers})\r\n                }}\r\n            this.setState({'objId':ls.get('obj_id')});\r\n            \r\n        })\r\n      }\r\n\r\n      async submitanswer(){\r\n        console.log('called');\r\n       \r\n        const url = 'http://localhost:8000/questions/'+this.state.objId+'/answer';\r\n        try {\r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' ,\r\n            \"Access-Control-Allow-Origin\":'*','Authorization':'bearer '+ls.get('token')},\r\n            body: JSON.stringify({ answer:this.state.quesbox})\r\n          }\r\n          )\r\n          if (response.ok) {\r\n            const data = await response.json()\r\n            console.log(\"data----------- \",data);\r\n          console.log(response);\r\n          this.toggleBox();\r\n          this.componentDidMount();\r\n          //   await this.setState({\r\n          //       user:data.user\r\n          //   })\r\n          } else {\r\n            alert('unable to fetch')\r\n            \r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            'You have an error in your code or there are Network issues.',\r\n            error\r\n          )\r\n          throw new Error(error)\r\n        }\r\n    }\r\n    \r\n\r\n      renderAnswer(){\r\n        if(this.state.answers && this.state.answers.length>0){\r\n        return ( <div>{this.state.answers.map((answer)=>{ return(\r\n            <div className=\"flex justify-center bg-green-300 p-4 m-4\">\r\n        <div className=\"block md:flex justify-center w-full\">\r\n        <div><center>\r\n            <img src={urlOfImages.answer} className=\"h-6 mt-5\"/></center>\r\n        </div>\r\n        \r\n        <div className='p-1 w-auto text-4m md:text-2xl'>\r\n            <span className=\"ml-2\">\r\n           {answer.answer}\r\n           </span>\r\n           <div className=\"text-right text-gray-500\">-- {answer.author.name}</div>\r\n        </div>\r\n        <div className={this.state.loggedIn ? 'block p-6':'hidden p-6'}>\r\n        <button onClick={()=>this.upvote(answer._id)} className=\"bg-green-500 hover:bg-green-700 w-full text-white p-2 px-4 mt-1 rounded mr-4\" >Upvote {answer.upvote.length}</button> \r\n        \r\n        <button onClick={()=>this.downvote(answer._id)} className=\"bg-red-500 hover:bg-red-700 text-white w-full rounded px-4 p-2 mt-1 \">Downvote {answer.downvote.length}</button> \r\n        </div>\r\n        </div>\r\n        </div>)\r\n        })}</div> );}\r\n        else{\r\n            return (<div className=\"flex justify-center bg-green-300 p-4 m-4 text-2xl\">NO ONE ANSWERED IT YET</div>)\r\n        }\r\n        \r\n      };\r\n\r\n\r\n      toggleBox(){\r\n        this.setState({\r\n            form : !this.state.form\r\n        })\r\n      }\r\n\r\n    render(){\r\n    return(\r\n        <Layout>\r\n           <div className={this.state.form ? 'hidden':'block'}>\r\n            <div className=\"flex overflow-hidden\">\r\n                <div  className={this.state.loggedIn ? 'block':'hidden'}>\r\n                <div className=\"fixed top-10  left-3 md:relative md:w-1/6 p-6 -ml-6\">\r\n                    <div onClick={()=> this.toggleBox()} className=\"bg-blue-500 hover:bg-blue-700 w-full text-white font-bold p-1 px-4 -ml-3 md:py-2 md:px-4 rounded m-1 md:m-4\">\r\n                        <span className=\"w-auto\"> Answer</span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            <div className=\"block text-center  border-gray-600 w-screen md:w-5/6\">\r\n                <center>\r\n            <div className=\"text-2l md:text-4xl bg-red-500 text-white p-8 my-4 mx-4 rounded hover:bg-red-600\" >\r\n                  <b>Q.</b>   {this.state.question.question}\r\n                  \r\n              </div>\r\n               \r\n                \r\n                <div className=\"text-2xl bg-green-500 p-8 text-white\">\r\n                    Answers\r\n                    {this.renderAnswer()}\r\n\r\n                </div>\r\n\r\n                </center>\r\n            </div>\r\n            \r\n            </div>\r\n            </div>\r\n            <div className={this.state.form ? 'block':'hidden'}>\r\n                <center>\r\n              <div className=\"max-w-sm rounded overflow-hidden shadow-lg mt-10 border\">\r\n \r\n  <div className='px-4 py-6'>\r\n    <div className=\"font-bold text-xl mb-2\">Write Your Answer Here</div>\r\n    \r\n    <textarea value={this.state.quesbox} onChange={this.handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" required placeholder=\"Enter Your question Here ...\" rows=\"6\"/>\r\n    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\" onClick={()=>this.submitanswer()}>\r\n  Submit Question\r\n</button>\r\n  </div>\r\n  \r\n</div>\r\n</center></div>\r\n        </Layout>\r\n        \r\n    )\r\n};\r\n}\r\n\r\nexport default QueryWithAns;"]},"metadata":{},"sourceType":"module"}